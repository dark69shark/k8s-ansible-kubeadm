---
# - debug: msg="{{lookup('fileglob', 'k8s.conf')}}"
- name: Set authorized key taken from file
  authorized_key:
    user: ds
    state: present
    key: "{{ lookup('file', 'id_rsa.pub') }}"

- name: "setup autoload kernel modules"
  copy:
    src: "{{lookup('fileglob', 'k8s_modules.conf')}}"
    dest: /etc/modules-load.d/k8s.conf

- name: "load kernel modules"
  modprobe:
    name: "{{item}}"
    state: present
  with_items:
   - overlay
   - br_netfilter

- name: "setup sysctl params"
  sysctl:
    name: "{{item}}"
    value: '1'
    sysctl_file: /etc/sysctl.d/k8s.conf
    state: present
    reload: yes
  with_items: 
  - net.bridge.bridge-nf-call-iptables
  - net.bridge.bridge-nf-call-ip6tables
  - net.ipv4.ip_forward

- name: setup docker repo
  block:
    - name: add docker repo key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: '0644'
        force: true
    - name: add docker repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

- name: setup k8s repo
  block:
    - name: add k8s repo key
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /etc/apt/trusted.gpg.d/kubernetes.asc
        mode: '0644'
        force: true
    - name: add k8s repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present


- name: install docker
  apt:
    pkg:
    - ca-certificates
    - curl
    - gnupg
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
    - apt-transport-https
    - kubelet
    - kubeadm
    - kubectl
