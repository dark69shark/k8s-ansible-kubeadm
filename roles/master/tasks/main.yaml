- name: nginx setup
  block:
  - name: nginx install
    apt:
      pkg: nginx
  - name: nginx config setup
    template:
      src: "nginx.conf.j2"
      dest: /etc/nginx/nginx.conf
  - systemd: 
      name: nginx
      enabled: yes
      state: restarted


- name: setup systemd config etcd
  block:
  - name: Copy kubelet.conf
    copy:
      src: "{{ lookup('fileglob', 'kubelet.conf') }}"
      dest: "/etc/systemd/system/kubelet.service.d/kubelet.conf"
  - name: Copy 20-etcd-service-manager.conf
    copy:
      src: "{{ lookup('fileglob', '20-etcd-service-manager.conf') }}"
      dest: "/etc/systemd/system/kubelet.service.d/20-etcd-service-manager.conf"

- name: reset
  shell: "kubeadm reset -f"
  register: kubeadm_reset
  when: reset is defined
- debug: msg="{{kubeadm_reset}}"
  when: debug is defined  

- name: generate config
  block:
  - name: generate ca
    shell: "kubeadm init phase certs etcd-ca"
  - fetch: src=/etc/kubernetes/pki/etcd/ dest=buffer/ flat=yes
  delegate_to: "{{groups.master.0}}"
  run_once: true



- name: generate config
  block:
  - template: src=kubeconfig.yaml.j2  dest=/tmp/kubeconfig.yaml
  - file: state=present dest=/etc/kubernetes/pki/etcd/
  - copy: src=buffer/ dest=/etc/kubernetes/pki/etcd/
  - file: state=absent dest=/etc/kubernetes/pki/etcd/ca.key
    when: inventory_hostname != groups.master.0
  - shell: "kubeadm init phase certs {{item}} --config=/tmp/kubeconfig.yaml"
    with_items: 
    - etcd-server
    - etcd-peer 
    - etcd-healthcheck-client
    - apiserver-etcd-client




- name: kubeadm init
  block:
  -  shell: "kubeadm init --upload-certs --token {{token}} --certificate-key {{certificate_key}} --pod-network-cidr {{pod_cidr}} --control-plane-endpoint 127.0.0.1:443"
     run_once: true
     delegate_to: "{{groups.master.0}}"
     register: kubeadm_output
  - debug: msg="{{kubeadm_output}}"
    when: debug is defined
  when: inventory_hostname == groups.master.0 and init is defined  


- name: join master node
  block:
  - shell: "kubeadm join 127.0.0.1:443 --token {{token}} --certificate-key {{certificate_key}} --discovery-token-unsafe-skip-ca-verification --control-plane"
    register: kubeadm_master_node
  - debug: msg="{{kubeadm_master_node}}"
    when: debug is defined
  when: inventory_hostname != groups.master.0 and join is defined

- name: Install cilium
  block:
  - uri:
      url: "https://raw.githubusercontent.com/cilium/cilium-cli/master/stable.txt"
      return_content: yes
    register: cilium_version
  - unarchive:
     src: "https://github.com/cilium/cilium-cli/releases/download/{{cilium_version.content|trim}}/cilium-linux-amd64.tar.gz"
     dest: /usr/local/bin
     remote_src: yes
  - shell: "KUBECONFIG=/etc/kubernetes/admin.conf cilium install"
    register: cilium_output
  - debug: msg="{{cilium_output}}"
    when: debug is defined
  when: cilium is defined

